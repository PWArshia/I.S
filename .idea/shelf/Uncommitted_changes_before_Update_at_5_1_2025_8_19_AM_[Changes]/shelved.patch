Index: I_S/src/main/java/Common/Receipt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/I_S/src/main/java/Common/Receipt.java b/I_S/src/main/java/Common/Receipt.java
new file mode 100644
--- /dev/null	(date 1746024271452)
+++ b/I_S/src/main/java/Common/Receipt.java	(date 1746024271452)
@@ -0,0 +1,43 @@
+package Common;
+
+import EntityManagers.DessertManager;
+import EntityManagers.DrinksManager;
+import EntityManagers.FoodsManager;
+import EntityManagers.MemberManager;
+
+import java.io.IOException;
+import java.time.LocalDate;
+
+public class Receipt {
+    private static final LocalDate NOW = LocalDate.now();
+    private Members member;
+    private MemberManager memberManager;
+    private Dessert[] dessert;
+    private DessertManager dessertManager;
+    private int dessertQuantity;
+    private Drinks[] drink;
+    private DrinksManager drinksManager;
+    private int drinkQuantity;
+    private Foods food[];
+    private FoodsManager foodsManager;
+    private int foodQuantity;
+    private double total;
+
+
+    public Receipt() {}
+
+    public boolean SetMember(int memberCode) throws IOException {
+        String MemberResult=memberManager.SearchMember(memberCode);
+        if(MemberResult.equals(null)) {
+            return false;
+        }
+        String MR[]=MemberResult.split(Commons.Commons);
+
+        this.member=new Members(MR[0],MR[1],MR[2],Integer.parseInt(MR[3]),MR[4],MR[5],Integer.parseInt(MR[6]));
+        return true;
+
+    }
+
+
+
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2cdbccfc-7c74-4180-9c11-8e37c21d8415\" name=\"Changes\" comment=\"Start Dessert User Interface\">\r\n      <change afterPath=\"$PROJECT_DIR$/I_S/src/main/resources/com/example/i_s/UpdateDessert.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Desserts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Desserts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/I_S/src/main/java/EntityManagers/TestMain.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/I_S/src/main/java/EntityManagers/TestMain.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/I_S/src/main/java/com/example/i_s/HelloController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/I_S/src/main/java/com/example/i_s/HelloController.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;kamy85&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/PWArshia/I.S.git&quot;,\r\n    &quot;accountId&quot;: &quot;6b782645-688f-481e-b25f-19ccc93deda4&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2wDlzgd4dgQ7LXqXqsFmk72Jq2d\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Common.TestMain.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.TestMain.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/IntelliJ IDEA 2024.3/intellij project/I.S/I_S/src/main/resources/com/example/i_s&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\IntelliJ IDEA 2024.3\\intellij project\\I.S\\I_S\\src\\main\\resources\\com\\example\\i_s\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"TestMain\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"EntityManagers.TestMain\" />\r\n      <module name=\"I_S\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"EntityManagers.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.TestMain\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.21565.193\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-IU-243.21565.193\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2cdbccfc-7c74-4180-9c11-8e37c21d8415\" name=\"Changes\" comment=\"\" />\r\n      <created>1745584288896</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1745584288896</updated>\r\n      <workItem from=\"1745584290037\" duration=\"36000\" />\r\n      <workItem from=\"1745604910608\" duration=\"193000\" />\r\n      <workItem from=\"1745605143332\" duration=\"414000\" />\r\n      <workItem from=\"1745635511259\" duration=\"2450000\" />\r\n      <workItem from=\"1745635511259\" duration=\"1875000\" />\r\n      <workItem from=\"1745694898940\" duration=\"2120000\" />\r\n      <workItem from=\"1745697364281\" duration=\"38000\" />\r\n      <workItem from=\"1745697545613\" duration=\"1528000\" />\r\n      <workItem from=\"1745699083786\" duration=\"1673000\" />\r\n      <workItem from=\"1745700799824\" duration=\"9287000\" />\r\n      <workItem from=\"1745712674550\" duration=\"7851000\" />\r\n      <workItem from=\"1745722277502\" duration=\"2671000\" />\r\n      <workItem from=\"1745724989237\" duration=\"80000\" />\r\n      <workItem from=\"1745752739705\" duration=\"1363000\" />\r\n      <workItem from=\"1745754120811\" duration=\"2493000\" />\r\n      <workItem from=\"1745756720518\" duration=\"2009000\" />\r\n      <workItem from=\"1745772737026\" duration=\"1935000\" />\r\n      <workItem from=\"1745831009509\" duration=\"338000\" />\r\n      <workItem from=\"1745867017791\" duration=\"5467000\" />\r\n      <workItem from=\"1745878059683\" duration=\"3439000\" />\r\n      <workItem from=\"1745891785714\" duration=\"2349000\" />\r\n      <workItem from=\"1745970900782\" duration=\"3126000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"DeBug and Update UI and Backend. Develop final Member Section.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745709757425</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745709757425</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Creat Foods Class in Common\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745715894267</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745715894267</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Creat first Food UI and Creat Foods.fxml\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745718488249</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745718488249</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Creat FoodManager Class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745722378678</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745722378678</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Finaly Develop Food\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745724920197</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745724920197</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Update UI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745831057118</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745831057118</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Debug And Update UI and Backend Food And Drink Section\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745871777943</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745871777943</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Start Dessert User Interface\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745879796493</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745879796493</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"DeBug and Update UI and Backend. Develop final Member Section.\" />\r\n    <MESSAGE value=\"Creat Foods Class in Common\" />\r\n    <MESSAGE value=\"Creat first Food UI and Creat Foods.fxml\" />\r\n    <MESSAGE value=\"Creat FoodManager Class\" />\r\n    <MESSAGE value=\"Finaly Develop Food\" />\r\n    <MESSAGE value=\"Update UI\" />\r\n    <MESSAGE value=\"Debug And Update UI and Backend Food And Drink Section\" />\r\n    <MESSAGE value=\"Start Dessert User Interface\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Start Dessert User Interface\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 914722538c3b50e57001505be3e534498ffb737e)
+++ b/.idea/workspace.xml	(date 1746024331073)
@@ -4,12 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="2cdbccfc-7c74-4180-9c11-8e37c21d8415" name="Changes" comment="Start Dessert User Interface">
-      <change afterPath="$PROJECT_DIR$/I_S/src/main/resources/com/example/i_s/UpdateDessert.fxml" afterDir="false" />
+    <list default="true" id="2cdbccfc-7c74-4180-9c11-8e37c21d8415" name="Changes" comment="Update Dessert User Interface">
+      <change afterPath="$PROJECT_DIR$/I_S/src/main/java/Common/Receipt.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/I_S/src/main/resources/com/example/i_s/Receipts.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Desserts" beforeDir="false" afterPath="$PROJECT_DIR$/Desserts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/I_S/src/main/java/EntityManagers/TestMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/I_S/src/main/java/EntityManagers/TestMain.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/I_S/src/main/java/com/example/i_s/HelloController.java" beforeDir="false" afterPath="$PROJECT_DIR$/I_S/src/main/java/com/example/i_s/HelloController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/I_S/src/main/resources/com/example/i_s/Start.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/I_S/src/main/resources/com/example/i_s/Start.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -64,7 +65,7 @@
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
     &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
     &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.build&quot;,
     &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
 }</component>
@@ -130,7 +131,11 @@
       <workItem from="1745867017791" duration="5467000" />
       <workItem from="1745878059683" duration="3439000" />
       <workItem from="1745891785714" duration="2349000" />
-      <workItem from="1745970900782" duration="3126000" />
+      <workItem from="1745970900782" duration="3360000" />
+      <workItem from="1745991786206" duration="1762000" />
+      <workItem from="1745997044501" duration="593000" />
+      <workItem from="1746009031956" duration="8158000" />
+      <workItem from="1746024094841" duration="237000" />
     </task>
     <task id="LOCAL-00001" summary="DeBug and Update UI and Backend. Develop final Member Section.">
       <option name="closed" value="true" />
@@ -196,7 +201,15 @@
       <option name="project" value="LOCAL" />
       <updated>1745879796493</updated>
     </task>
-    <option name="localTasksCounter" value="9" />
+    <task id="LOCAL-00009" summary="Update Dessert User Interface">
+      <option name="closed" value="true" />
+      <created>1745974250365</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1745974250365</updated>
+    </task>
+    <option name="localTasksCounter" value="10" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -222,7 +235,8 @@
     <MESSAGE value="Update UI" />
     <MESSAGE value="Debug And Update UI and Backend Food And Drink Section" />
     <MESSAGE value="Start Dessert User Interface" />
-    <option name="LAST_COMMIT_MESSAGE" value="Start Dessert User Interface" />
+    <MESSAGE value="Update Dessert User Interface" />
+    <option name="LAST_COMMIT_MESSAGE" value="Update Dessert User Interface" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: I_S/src/main/resources/com/example/i_s/Receipts.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/I_S/src/main/resources/com/example/i_s/Receipts.fxml b/I_S/src/main/resources/com/example/i_s/Receipts.fxml
new file mode 100644
--- /dev/null	(date 1746016423080)
+++ b/I_S/src/main/resources/com/example/i_s/Receipts.fxml	(date 1746016423080)
@@ -0,0 +1,100 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.Accordion?>
+<?import javafx.scene.control.Button?>
+<?import javafx.scene.control.Label?>
+<?import javafx.scene.control.TextArea?>
+<?import javafx.scene.control.TextField?>
+<?import javafx.scene.control.TitledPane?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.text.Font?>
+
+<Accordion maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="600.0" prefWidth="800.0" xmlns:fx="http://javafx.com/fxml/1" xmlns="http://javafx.com/javafx/23.0.1" fx:controller="com.example.i_s.HelloController">
+  <panes>
+    <TitledPane animated="false" text="SetReceipts">
+      <content>
+        <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
+               <children>
+                  <Label layoutX="723.0" layoutY="14.0" prefHeight="30.0" prefWidth="59.0" text="کد غذا:">
+                     <font>
+                        <Font size="20.0" />
+                     </font>
+                  </Label>
+                  <TextField fx:id="FoodCode" layoutX="589.0" layoutY="53.0" prefHeight="26.0" prefWidth="194.0">
+                     <font>
+                        <Font size="10.0" />
+                     </font>
+                  </TextField>
+                  <Label layoutX="715.0" layoutY="89.0" prefHeight="30.0" prefWidth="67.0" text="کد دسر:">
+                     <font>
+                        <Font size="20.0" />
+                     </font>
+                  </Label>
+                  <TextField fx:id="DessertCode" layoutX="589.0" layoutY="129.0" prefHeight="26.0" prefWidth="194.0">
+                     <font>
+                        <Font size="10.0" />
+                     </font>
+                  </TextField>
+                  <Label layoutX="676.0" layoutY="166.0" prefHeight="30.0" prefWidth="106.0" text="کد نوشیدنی:">
+                     <font>
+                        <Font size="20.0" />
+                     </font>
+                  </Label>
+                  <TextField fx:id="DrinkCode" layoutX="589.0" layoutY="206.0" prefHeight="26.0" prefWidth="194.0">
+                     <font>
+                        <Font size="10.0" />
+                     </font>
+                  </TextField>
+                  <TextField fx:id="FoodCount" layoutX="530.0" layoutY="53.0" prefHeight="26.0" prefWidth="42.0">
+                     <font>
+                        <Font size="10.0" />
+                     </font>
+                  </TextField>
+                  <TextField fx:id="DessertCount" layoutX="530.0" layoutY="129.0" prefHeight="26.0" prefWidth="42.0">
+                     <font>
+                        <Font size="10.0" />
+                     </font>
+                  </TextField>
+                  <TextField fx:id="DrinkCount" layoutX="530.0" layoutY="206.0" prefHeight="26.0" prefWidth="42.0">
+                     <font>
+                        <Font size="10.0" />
+                     </font>
+                  </TextField>
+                  <Label layoutX="530.0" layoutY="14.0" prefHeight="30.0" prefWidth="50.0" text="تعداد:">
+                     <font>
+                        <Font size="20.0" />
+                     </font>
+                  </Label>
+                  <Label layoutX="681.0" layoutY="243.0" prefHeight="30.0" prefWidth="101.0" text="کد عضویت:">
+                     <font>
+                        <Font size="20.0" />
+                     </font>
+                  </Label>
+                  <TextField fx:id="MemberCode" layoutX="589.0" layoutY="283.0" prefHeight="26.0" prefWidth="194.0">
+                     <font>
+                        <Font size="10.0" />
+                     </font>
+                  </TextField>
+                  <TextField fx:id="MemberCount" layoutX="530.0" layoutY="283.0" prefHeight="26.0" prefWidth="42.0">
+                     <font>
+                        <Font size="10.0" />
+                     </font>
+                  </TextField>
+                  <TextArea fx:id="AllChoice" layoutX="14.0" layoutY="10.0" prefHeight="466.0" prefWidth="479.0" />
+                  <Label fx:id="ReceiptError" layoutX="530.0" layoutY="318.0" prefHeight="30.0" prefWidth="252.0">
+                     <font>
+                        <Font size="20.0" />
+                     </font>
+                  </Label>
+                  <Button layoutX="617.0" layoutY="361.0" mnemonicParsing="false" onAction="#SetReceipt" prefHeight="50.0" prefWidth="78.0" text="ثبت" />
+                  <Button layoutX="214.0" layoutY="486.0" mnemonicParsing="false" onAction="#SetAllChoice" prefHeight="50.0" prefWidth="78.0" text="Data" />
+               </children></AnchorPane>
+      </content>
+    </TitledPane>
+    <TitledPane animated="false" text="AllReceipts">
+      <content>
+        <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" />
+      </content>
+    </TitledPane>
+  </panes>
+</Accordion>
Index: I_S/src/main/java/EntityManagers/TestMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package EntityManagers;\r\nimport java.io.IOException;\r\n\r\npublic class TestMain {\r\n    public static void main(String[] args) throws IOException {\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/I_S/src/main/java/EntityManagers/TestMain.java b/I_S/src/main/java/EntityManagers/TestMain.java
--- a/I_S/src/main/java/EntityManagers/TestMain.java	(revision 914722538c3b50e57001505be3e534498ffb737e)
+++ b/I_S/src/main/java/EntityManagers/TestMain.java	(date 1745992948184)
@@ -1,9 +1,13 @@
 package EntityManagers;
 import java.io.IOException;
+import java.time.LocalDate;
 
 public class TestMain {
     public static void main(String[] args) throws IOException {
-
+        LocalDate today = LocalDate.parse("");
+        System.out.println(today);
+        LocalDate Lastday = today.plusDays(4);
+        System.out.println(Lastday);
 
     }
 
Index: I_S/src/main/java/com/example/i_s/HelloController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.i_s;\r\nimport Common.*;\r\nimport EntityManagers.*;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.stage.Stage;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\npublic class HelloController {\r\n\r\n    public HelloController() throws IOException {}\r\n\r\n\r\n    // ------------------------------------------------------------------------------------------------>>>Room Section\r\n    RoomManager roomManager=new RoomManager(\"RoomsList\");\r\n    Stage RoomWindow=new Stage();\r\n\r\n\r\n    @FXML\r\n    private TextField RoomNum1;\r\n    @FXML\r\n    private TextField tbNum;\r\n    @FXML\r\n    private TextField PriceV;\r\n    @FXML\r\n    private CheckBox Type;\r\n    @FXML\r\n    private Label ErrorR;\r\n\r\n\r\n    @FXML\r\n    public void RoomsCo(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader RoomsLoader = new FXMLLoader(getClass().getResource(\"Rooms.fxml\"));\r\n        Scene RoomsScene = new Scene(RoomsLoader.load(),800,600);\r\n        RoomWindow.setScene(RoomsScene);\r\n        RoomWindow.setTitle(\"Rooms\");\r\n        RoomWindow.show();\r\n    }\r\n\r\n\r\n    @FXML\r\n    private TextField SearchBoxR;\r\n    @FXML\r\n    private Label RoomSearchResult;\r\n    private int SearchIDRoom;\r\n\r\n    public void SearchRoom(ActionEvent actionEvent) throws IOException {\r\n        if(SearchBoxR.getText().length()==0){\r\n            RoomSearchResult.setText(\"شماره اتاق را وارد کنید\");\r\n        }\r\n\r\n        String RoomID=SearchBoxR.getText();\r\n        int RID=0;\r\n        try {\r\n            RID=Integer.parseInt(RoomID);\r\n        }\r\n        catch (NumberFormatException e) {\r\n            RoomSearchResult.setText(\"نامعتبر!\");\r\n            SearchBoxR.clear();\r\n            return;\r\n        }\r\n\r\n        SearchIDRoom=RID;\r\n        String Result=roomManager.search(RID);\r\n        RoomSearchResult.setText(Result);\r\n        SearchBoxR.clear();\r\n    }\r\n\r\n\r\n    @FXML\r\n    public void SetStageUpdate(ActionEvent actionEvent) throws IOException {\r\n        if(RoomSearchResult.getText().length()==0)\r\n            return;\r\n        if(RoomSearchResult.getText().equals(\"نامعتبر!\"))\r\n            return;\r\n        FXMLLoader RoomsLoader = new FXMLLoader(HelloApplication.class.getResource(\"UpdateRoom.fxml\"));\r\n        Scene scene=new Scene(RoomsLoader.load(),800,600);\r\n        RoomWindow.setScene(scene);\r\n        RoomWindow.setTitle(\"UpdateRoom\");\r\n        RoomWindow.show();\r\n\r\n    }\r\n\r\n\r\n    @FXML\r\n    private TextField RoomNum1U;\r\n    @FXML\r\n    private TextField tbNumU;\r\n    @FXML\r\n    private TextField PriceVU;\r\n    @FXML\r\n    private CheckBox TypeU;\r\n    @FXML\r\n    private Label ErrorRU;\r\n\r\n\r\n    @FXML\r\n    private void UpdateRoom(ActionEvent actionEvent) throws IOException {\r\n        String RMNUM=RoomNum1U.getText();\r\n        if(RMNUM.length()==0){\r\n            ErrorRU.setText(\"لطفا شماره اتاق را وارد کنید\");\r\n            return;\r\n        }\r\n        String TBNUM=tbNumU.getText();\r\n        if(TBNUM.length()==0){\r\n            ErrorRU.setText(\"لطفا شماره طبقه را وارد کنید\");\r\n            return;\r\n        }\r\n        String PRICEV=PriceVU.getText();\r\n        if(PRICEV.length()==0){\r\n            ErrorRU.setText(\"لطفا قیمت اتاق را وارد کنید\");\r\n            return;\r\n        }\r\n        String TYPE;\r\n        if(TypeU.isSelected()){\r\n            TYPE=\"VIP\";\r\n        }\r\n        else{\r\n            TYPE=\"normal\";\r\n        }\r\n\r\n        Rooms A1=new Rooms();\r\n\r\n        int RoomNum=0;\r\n        try {\r\n            RoomNum=Integer.parseInt(RMNUM);\r\n        }\r\n        catch (NumberFormatException e) {\r\n            ErrorRU.setText(\"نامعتبر!\");\r\n            RoomNum1U.clear();\r\n            return;\r\n        }\r\n        boolean Check=A1.setNO(RoomNum);\r\n        if(!Check){\r\n            ErrorRU.setText(\"نامعتبر!\");\r\n            RoomNum1U.clear();\r\n            return;\r\n        }\r\n        int floor=0;\r\n        try {\r\n            floor=Integer.parseInt(TBNUM);\r\n        }\r\n        catch (NumberFormatException e) {\r\n            ErrorRU.setText(\"نامعتبر!\");\r\n            tbNumU.clear();\r\n            return;\r\n        }\r\n        Check=A1.SetFloor(floor);\r\n        if(!Check){\r\n            ErrorRU.setText(\"نامعتبر!\");\r\n            tbNumU.clear();\r\n            return;\r\n        }\r\n\r\n        double price1=0;\r\n        try {\r\n            price1=Double.parseDouble(PRICEV);\r\n        }\r\n        catch (NumberFormatException e) {\r\n            ErrorRU.setText(\"نامعتبر!\");\r\n            PriceVU.clear();\r\n            return;\r\n        }\r\n        Check= A1.SetPrice(price1);\r\n        if(!Check){\r\n            ErrorRU.setText(\"نامعتبر!\");\r\n            PriceVU.clear();\r\n            return;\r\n        }\r\n\r\n\r\n        Check= A1.SetRoomType(TYPE);\r\n        if(!Check){\r\n            ErrorRU.setText(\"نامعتبر!\");\r\n            return;\r\n        }\r\n\r\n        A1.SetIsBussy(false);\r\n        roomManager.Update(SearchIDRoom,A1);\r\n        ErrorRU.setText(\"ثبت شد\");\r\n        PriceVU.clear();\r\n        RoomNum1U.clear();\r\n        tbNumU.clear();\r\n        TypeU.setSelected(false);\r\n    }\r\n    @FXML\r\n    public void SetDelete(ActionEvent actionEvent) throws IOException {\r\n        roomManager.Delete(SearchIDRoom);\r\n        SearchBoxR.clear();\r\n        RoomSearchResult.setText(\"\");\r\n    }\r\n\r\n    public void SetRoom(ActionEvent actionEvent) throws IOException {\r\n        String RMNUM=RoomNum1.getText();\r\n        if(RMNUM.length()==0){\r\n            ErrorR.setText(\"لطفا شماره اتاق را وارد کنید\");\r\n            return;\r\n        }\r\n        String TBNUM=tbNum.getText();\r\n        if(TBNUM.length()==0){\r\n            ErrorR.setText(\"لطفا شماره طبقه را وارد کنید\");\r\n            return;\r\n        }\r\n        String PRICEV=PriceV.getText();\r\n        if(PRICEV.length()==0){\r\n            ErrorR.setText(\"لطفا قیمت اتاق را وارد کنید\");\r\n            return;\r\n        }\r\n        String TYPE;\r\n        if(Type.isSelected()){\r\n            TYPE=\"VIP\";\r\n        }\r\n        else{\r\n            TYPE=\"normal\";\r\n        }\r\n\r\n        Rooms A1=new Rooms();\r\n\r\n        int RoomNum=0;\r\n        try {\r\n            RoomNum=Integer.parseInt(RMNUM);\r\n        }\r\n        catch (NumberFormatException e) {\r\n            ErrorR.setText(\"نامعتبر!\");\r\n            RoomNum1.clear();\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        boolean Check=A1.setNO(RoomNum);\r\n        if(!Check){\r\n            ErrorR.setText(\"نامعتبر!\");\r\n            RoomNum1.clear();\r\n            return;\r\n        }\r\n        int floor=0;\r\n        try {\r\n            floor=Integer.parseInt(TBNUM);\r\n        }\r\n        catch (NumberFormatException e) {\r\n            ErrorR.setText(\"نامعتبر!\");\r\n            tbNum.clear();\r\n            return;\r\n        }\r\n        Check=A1.SetFloor(floor);\r\n        if(!Check){\r\n            ErrorR.setText(\"نامعتبر!\");\r\n            tbNum.clear();\r\n            return;\r\n        }\r\n\r\n        double price1=0;\r\n        try {\r\n            price1=Double.parseDouble(PRICEV);\r\n        }\r\n        catch (NumberFormatException e) {\r\n            ErrorR.setText(\"نامعتبر!\");\r\n            PriceV.clear();\r\n            return;\r\n        }\r\n        Check= A1.SetPrice(price1);\r\n        if(!Check){\r\n            ErrorR.setText(\"نامعتبر!\");\r\n            PriceV.clear();\r\n            return;\r\n        }\r\n\r\n\r\n        Check= A1.SetRoomType(TYPE);\r\n        if(!Check){\r\n            ErrorR.setText(\"نامعتبر!\");\r\n            return;\r\n        }\r\n\r\n        A1.SetIsBussy(false);\r\n        roomManager.AddRoom(A1);\r\n        ErrorR.setText(\"ثبت شد\");\r\n        PriceV.clear();\r\n        RoomNum1.clear();\r\n        tbNum.clear();\r\n        Type.setSelected(false);\r\n    }\r\n    @FXML\r\n    private TextArea AllDataRoom;\r\n\r\n    @FXML\r\n    public void SetDataRoom(ActionEvent actionEvent) throws IOException {\r\n        AllDataRoom.setEditable(false);\r\n        roomManager.Array2Rooms();\r\n        Rooms A[]=roomManager.GetArray();\r\n        int cA=roomManager.GetRowCount();\r\n        AllDataRoom.setText(\"\");\r\n        for (int i = 0; i < cA; i++) {\r\n            AllDataRoom.appendText(A[i].toString()+\"\\n\");\r\n        }\r\n    }\r\n\r\n\r\n    //------------------------------------------------------------------------------------------------------------------------------>>>Member Section\r\n    Stage MemberWindow=new Stage();\r\n    MemberManager memberManager=new MemberManager(\"MembersList\");\r\n\r\n    @FXML\r\n    private TextField MemberName;\r\n    @FXML\r\n    private TextField MemberLastName;\r\n    @FXML\r\n    private TextField NCode;\r\n    @FXML\r\n    private TextField PhoneNUM;\r\n    @FXML\r\n    private TextField Age;\r\n    @FXML\r\n    private CheckBox Male;\r\n    @FXML\r\n    private CheckBox Female;\r\n    @FXML\r\n    private Label MError;\r\n    @FXML\r\n    private Label SearchResult;\r\n    @FXML\r\n    private TextField SearchBoxM;\r\n    @FXML\r\n    private TextArea AllData;\r\n\r\n\r\n\r\n\r\n    @FXML\r\n    public void MembersCo(ActionEvent actionEvent) throws IOException {\r\n\r\n        FXMLLoader MembersLoader = new FXMLLoader(getClass().getResource(\"Members.fxml\"));\r\n        Scene MembersScene = new Scene(MembersLoader.load(),800,600);\r\n        MemberWindow.setScene(MembersScene);\r\n        MemberWindow.setTitle(\"Members\");\r\n        MemberWindow.show();\r\n\r\n    }\r\n\r\n\r\n\r\n    public void SetMember(ActionEvent actionEvent) throws IOException {\r\n\r\n        String MNAME=MemberName.getText();\r\n        if (MNAME.length()==0) {\r\n            MError.setText(\"لطفا نام را وارد کنید\");\r\n            return;\r\n        }\r\n        String LNAME=MemberLastName.getText();\r\n        if (LNAME.length()==0) {\r\n            MError.setText(\"لطفا نام خانوادگی را وارد کنید\");\r\n            return;\r\n        }\r\n        String NCODE=NCode.getText();\r\n        if (NCODE.length()==0) {\r\n            MError.setText(\"لطفا کد ملی را وارد کنید\");\r\n            return;\r\n        }\r\n        String PHONENUM=PhoneNUM.getText();\r\n        if (PHONENUM.length()==0) {\r\n            MError.setText(\"لطفا شماره موبایل را وارد کنید\");\r\n            return;\r\n        }\r\n        int AGE;\r\n        try {\r\n            AGE=Integer.parseInt(Age.getText());\r\n        }\r\n        catch (Exception e) {\r\n            MError.setText(\"سن را درست وارد کنید\");\r\n            return;\r\n        }\r\n\r\n\r\n        if (!Male.isSelected() && !Female.isSelected()) {\r\n            MError.setText(\"لطفا یک جنسیت را انتخاب کنید\");\r\n            return;\r\n        }\r\n        if(Male.isSelected() && Female.isSelected()){\r\n            MError.setText(\"لطفا یک جنسیت را انتخاب کنید\");\r\n            Male.setSelected(false);\r\n            Female.setSelected(false);\r\n            return;\r\n        }\r\n        String G=null;\r\n        if(Male.isSelected() && !Female.isSelected()){\r\n            G=\"Male\";\r\n        }\r\n        if(Female.isSelected() && !Male.isSelected()){\r\n            G=\"Female\";\r\n        }\r\n        int t=memberManager.IndexSearchMember((int) (Math.random()*9999));\r\n        int Rndm=0;\r\n        while (t!=-1){\r\n            Rndm=(int) (Math.random()*9999);\r\n            t=memberManager.IndexSearchMember(Rndm);\r\n        }\r\n\r\n        Members T=new Members(MNAME,LNAME,NCODE,AGE,G,PHONENUM,Rndm);\r\n        int temp = T.SetName(MNAME);\r\n        if (temp==0) {\r\n            MError.setText(\"نام را درست وارد کنید\");\r\n            MemberName.clear();\r\n            return;\r\n        }\r\n        temp=T.SetLastName(LNAME);\r\n        if (temp==0) {\r\n            MError.setText(\"نام خانوادگی را درست وارد کنید\");\r\n            MemberLastName.clear();\r\n            return;\r\n        }\r\n        temp=T.SetNationalCode(NCODE);\r\n        if (temp==0) {\r\n            MError.setText(\"کد ملی را درست وارد کنید\");\r\n            NCode.clear();\r\n            return;\r\n        }\r\n        temp=T.SetAge(AGE);\r\n        if (temp==0) {\r\n            MError.setText(\"سن را درست وارد کنید\");\r\n            Age.clear();\r\n            return;\r\n        }\r\n\r\n        temp=T.SetPhoneNumber(PHONENUM);\r\n        if (temp==0) {\r\n            MError.setText(\"شماره تلفن را درست وارد کنید\");\r\n            PhoneNUM.clear();\r\n            return;\r\n        }\r\n        T.SetGender(G);\r\n\r\n\r\n        memberManager.AddMember(T);\r\n        MError.setText(\"ثبت شد!\");\r\n        MemberName.clear();\r\n        MemberLastName.clear();\r\n        NCode.clear();\r\n        PhoneNUM.clear();\r\n        Age.clear();\r\n        Male.setSelected(false);\r\n        Female.setSelected(false);\r\n    }\r\n\r\n    private int MemberSearchID;\r\n\r\n    public void SearchMemeber(ActionEvent actionEvent) throws IOException {\r\n        String Box=SearchBoxM.getText();\r\n        if (Box.length()<1 && Box.length()>4) {\r\n            SearchResult.setText(\"کد عضویت عددی است بین 0 تا 9999\");\r\n            SearchBoxM.clear();\r\n            return;\r\n        }\r\n        Members T=new Members();\r\n        for (int x=0;x<Box.length();x++) {\r\n            if(!(Box.charAt(x)>='0' && Box.charAt(x)<='9')) {\r\n                SearchResult.setText(\"کد عضویت عددی است بین 0 تا 9999\");\r\n                SearchBoxM.clear();\r\n                return;\r\n            }\r\n        }\r\n        MemberSearchID=Integer.parseInt(Box);\r\n        String Result=memberManager.SearchMember(Integer.parseInt(Box));\r\n        if (Result==null) {\r\n            SearchResult.setText(\"وجود ندارد\");\r\n            SearchBoxM.clear();\r\n            return;\r\n        }\r\n\r\n        SearchResult.setText(Result);\r\n    }\r\n\r\n\r\n\r\n\r\n    public void DeleteMember(ActionEvent actionEvent) throws IOException {\r\n        if(SearchResult.equals(\"وجود ندارد\"))\r\n            return;\r\n        if (SearchResult.getText().length()==0)\r\n            return;\r\n        String[] A=SearchResult.getText().split(Commons.Commons);\r\n        Members T=new Members(A[0],A[1],A[2],Integer.parseInt(A[3]),A[4],A[5],Integer.parseInt(A[6]));\r\n        boolean Check=memberManager.DeleteMember(T);\r\n        if(Check) {\r\n            SearchResult.setText(\"با موفقیت پاک شد\");\r\n            SearchBoxM.clear();\r\n        }\r\n    }\r\n\r\n\r\n    Stage Update=new Stage();\r\n    @FXML\r\n    private TextField MemberNameU;\r\n    @FXML\r\n    private TextField MemberLastNameU;\r\n    @FXML\r\n    private TextField NCodeU;\r\n    @FXML\r\n    private TextField PhoneNUMU;\r\n    @FXML\r\n    private TextField AgeU;\r\n    @FXML\r\n    private CheckBox MaleU;\r\n    @FXML\r\n    private CheckBox FemaleU;\r\n    @FXML\r\n    private Label MErrorU;\r\n\r\n\r\n    public void UpdateStageMember(ActionEvent actionEvent) throws IOException {\r\n        if(SearchResult.equals(\"وجود ندارد\"))\r\n            return;\r\n        if (SearchResult.getText().length()==0)\r\n            return;\r\n        FXMLLoader loader=new FXMLLoader(HelloController.class.getResource(\"UpdateMember.fxml\"));\r\n        Scene scene=new Scene(loader.load(),800,600);\r\n        Update.setScene(scene);\r\n        Update.show();\r\n    }\r\n\r\n    public void SetUpdateMember(ActionEvent actionEvent) throws IOException {\r\n        String MNAME=MemberNameU.getText();\r\n        if (MNAME.length()==0) {\r\n            MErrorU.setText(\"لطفا نام را وارد کنید\");\r\n            return;\r\n        }\r\n        String LNAME=MemberLastNameU.getText();\r\n        if (LNAME.length()==0) {\r\n            MErrorU.setText(\"لطفا نام خانوادگی را وارد کنید\");\r\n            return;\r\n        }\r\n        String NCODE=NCodeU.getText();\r\n        if (NCODE.length()==0) {\r\n            MErrorU.setText(\"لطفا کد ملی را وارد کنید\");\r\n            return;\r\n        }\r\n        String PHONENUM=PhoneNUMU.getText();\r\n        if (PHONENUM.length()==0) {\r\n            MErrorU.setText(\"لطفا شماره موبایل را وارد کنید\");\r\n            return;\r\n        }\r\n        int AGE;\r\n        try {\r\n            AGE=Integer.parseInt(AgeU.getText());\r\n        }\r\n        catch (Exception e) {\r\n            MErrorU.setText(\"سن را درست وارد کنید\");\r\n            return;\r\n        }\r\n\r\n\r\n        if (!MaleU.isSelected() && !FemaleU.isSelected()) {\r\n            MErrorU.setText(\"لطفا یک جنسیت را انتخاب کنید\");\r\n            return;\r\n        }\r\n        if(MaleU.isSelected() && FemaleU.isSelected()){\r\n            MErrorU.setText(\"لطفا یک جنسیت را انتخاب کنید\");\r\n            MaleU.setSelected(false);\r\n            FemaleU.setSelected(false);\r\n            return;\r\n        }\r\n        String G=null;\r\n        if(MaleU.isSelected() && !FemaleU.isSelected()){\r\n            G=\"Male\";\r\n        }\r\n        if(FemaleU.isSelected() && !MaleU.isSelected()){\r\n            G=\"Female\";\r\n        }\r\n        int t=memberManager.IndexSearchMember((int) (Math.random()*9999));\r\n        int Rndm=0;\r\n        while (t!=-1){\r\n            Rndm=(int) (Math.random()*9999);\r\n            t=memberManager.IndexSearchMember(Rndm);\r\n        }\r\n\r\n        Members T=new Members(MNAME,LNAME,NCODE,AGE,G,PHONENUM,Rndm);\r\n        int temp = T.SetName(MNAME);\r\n        if (temp==0) {\r\n            MErrorU.setText(\"نام را درست وارد کنید\");\r\n            MemberNameU.clear();\r\n            return;\r\n        }\r\n        temp=T.SetLastName(LNAME);\r\n        if (temp==0) {\r\n            MErrorU.setText(\"نام خانوادگی را درست وارد کنید\");\r\n            MemberLastNameU.clear();\r\n            return;\r\n        }\r\n        temp=T.SetNationalCode(NCODE);\r\n        if (temp==0) {\r\n            MErrorU.setText(\"کد ملی را درست وارد کنید\");\r\n            NCodeU.clear();\r\n            return;\r\n        }\r\n        temp=T.SetAge(AGE);\r\n        if (temp==0) {\r\n            MErrorU.setText(\"سن را درست وارد کنید\");\r\n            AgeU.clear();\r\n            return;\r\n        }\r\n\r\n        temp=T.SetPhoneNumber(PHONENUM);\r\n        if (temp==0) {\r\n            MErrorU.setText(\"شماره تلفن را درست وارد کنید\");\r\n            PhoneNUMU.clear();\r\n            return;\r\n        }\r\n        T.SetGender(G);\r\n\r\n\r\n        String[] S=memberManager.SearchMember(MemberSearchID).split(Commons.Commons);\r\n        Members T1=new Members(S[0],S[1],S[2],Integer.parseInt(S[3]),S[4],S[5],Integer.parseInt(S[6]));\r\n        MErrorU.setText(\"ثبت شد!\");\r\n        memberManager.UpdateMember(T1,T);\r\n        MemberNameU.clear();\r\n        MemberLastNameU.clear();\r\n        NCodeU.clear();\r\n        PhoneNUMU.clear();\r\n        AgeU.clear();\r\n        MaleU.setSelected(false);\r\n        FemaleU.setSelected(false);\r\n    }\r\n\r\n\r\n    public void SetDataMem(ActionEvent actionEvent) {\r\n        Members M[]=memberManager.GetArray();\r\n        int cM=memberManager.GetLengthArray();\r\n        AllData.setEditable(false);\r\n        for (int x=0;x<cM;x++) {\r\n            AllData.appendText(M[x].toString()+\"\\n\");\r\n        }\r\n    }\r\n\r\n\r\n    //------------------------------------------------------------------------------------------------------------------------->>>Food Section\r\n    private Stage FoodStage=new Stage();\r\n    private FoodsManager FOODS=new FoodsManager(\"FoodList\");\r\n\r\n    @FXML\r\n    private TextField FoodName;\r\n    @FXML\r\n    private TextField TypeFood;\r\n    @FXML\r\n    private TextField EntityFood;\r\n    @FXML\r\n    private TextField FoodPrice;\r\n    @FXML\r\n    private Label MErrorFood;\r\n    @FXML\r\n    private TextField SearchBoxF;\r\n    @FXML\r\n    private Label SearchResultFood;\r\n    @FXML\r\n    private TextArea AllDataFood;\r\n    @FXML\r\n    private TextField FoodBuyPrice;\r\n\r\n    private static int SearchFoodID=0;\r\n\r\n\r\n    public void FoodsCo(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(HelloApplication.class.getResource(\"Foods.fxml\"));\r\n        Scene scene=new Scene(loader.load(),800,600);\r\n        FoodStage.setScene(scene);\r\n        FoodStage.show();\r\n    }\r\n\r\n    public void SetFood(ActionEvent actionEvent) throws IOException {\r\n        String Name=FoodName.getText();\r\n        if (Name.length()==0) {\r\n            MErrorFood.setText(\"لطفا نام غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String Type=TypeFood.getText();\r\n        if (Type.length()==0) {\r\n            MErrorFood.setText(\"لطفا نوع غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String Entity=EntityFood.getText();\r\n        if (Entity.length()==0) {\r\n            MErrorFood.setText(\"لطفا تعداد غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String Price=FoodPrice.getText();\r\n        if (Price.length()==0) {\r\n            MErrorFood.setText(\"لطفا قیمت غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String BuyPrice=FoodBuyPrice.getText();\r\n        if (BuyPrice.length()==0) {\r\n            MErrorFood.setText(\"لطفا قیمت خرید غذا را وارد کنید\");\r\n            return;\r\n        }\r\n\r\n        Foods F=new Foods();\r\n        boolean Check=F.SetFoodName(Name);\r\n        if (!Check) {\r\n            MErrorFood.setText(\"نامعتبر!\");\r\n            FoodName.clear();\r\n            return;\r\n        }\r\n        Check=F.SetFoodType(Type);\r\n        if (!Check) {\r\n            MErrorFood.setText(\"نامعتبر!\");\r\n            TypeFood.clear();\r\n            return;\r\n        }\r\n        double Price2;\r\n        try {\r\n            Price2=Double.parseDouble(Price);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorFood.setText(\"نامعتبر!\");\r\n            FoodPrice.clear();\r\n            return;\r\n        }\r\n        Check=F.SetFoodPrice(Price2);\r\n        if (!Check) {\r\n            MErrorFood.setText(\"نامعتبر!\");\r\n            FoodPrice.clear();\r\n            return;\r\n        }\r\n        double Price3;\r\n        try {\r\n            Price3=Double.parseDouble(BuyPrice);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorFood.setText(\"نامعتبر!\");\r\n            FoodBuyPrice.clear();\r\n            return;\r\n        }\r\n        Check=F.SetBuyPrice(Price3);\r\n        if (!Check) {\r\n            MErrorFood.setText(\"نامعتبر!\");\r\n            FoodBuyPrice.clear();\r\n            return;\r\n        }\r\n        int Count=0;\r\n        try {\r\n            Count=Integer.parseInt(Entity);\r\n        }\r\n        catch (Exception a){\r\n            MErrorFood.setText(\"نامعتبر!\");\r\n            EntityFood.clear();\r\n            return;\r\n        }\r\n        Check=F.SetFoodQuantity(Count);\r\n        if (!Check) {\r\n            MErrorFood.setText(\"نامعتبر!\");\r\n            EntityFood.clear();\r\n            return;\r\n        }\r\n        F.SetID((int) (Math.random()*99));\r\n        MErrorFood.setText(\"ثبت شد!\");\r\n        FOODS.AddFood(F);\r\n        FoodName.clear();\r\n        TypeFood.clear();\r\n        EntityFood.clear();\r\n        FoodPrice.clear();\r\n        FoodBuyPrice.clear();\r\n    }\r\n\r\n    public void SearchFood(ActionEvent actionEvent) throws IOException {\r\n        if (!(SearchBoxF.getText().length()>0 && SearchBoxF.getText().length()<3)){\r\n            SearchResultFood.setText(\"نامعتبر!\");\r\n            SearchBoxF.clear();\r\n            return;\r\n        }\r\n        try {\r\n            SearchFoodID=Integer.parseInt(SearchBoxF.getText());\r\n        }\r\n        catch (Exception e) {\r\n            SearchResultFood.setText(\"نامعتبر!\");\r\n            SearchBoxF.clear();\r\n            return;\r\n        }\r\n\r\n        Foods F=new Foods();\r\n        boolean Check=F.SetID(SearchFoodID);\r\n        if (!Check) {\r\n            SearchResultFood.setText(\"نامعتبر!\");\r\n            SearchBoxF.clear();\r\n            return;\r\n        }\r\n        String TE=FOODS.SearchFood(SearchFoodID);\r\n        SearchResultFood.setText(TE);\r\n        SearchBoxF.clear();\r\n    }\r\n\r\n    public void UpdateStageFood(ActionEvent actionEvent) throws IOException {\r\n        if(SearchResultFood.getText().length()==0){\r\n            return;\r\n        }\r\n        if (SearchResultFood.getText().equals(\"نامعتبر!\")) {\r\n            return;\r\n        }\r\n        FXMLLoader loader=new FXMLLoader(HelloApplication.class.getResource(\"UpdateFood.fxml\"));\r\n        Scene scene=new Scene(loader.load(),800,600);\r\n        FoodStage.setScene(scene);\r\n        FoodStage.show();\r\n    }\r\n\r\n    public void DeleteFood(ActionEvent actionEvent) throws IOException {\r\n        String S1=SearchResultFood.getText();\r\n        String[] F1=S1.split(Commons.Commons);\r\n        Foods F=new Foods(Integer.parseInt(F1[0]),F1[1],F1[2],\r\n                Double.parseDouble(F1[3]),Integer.parseInt(F1[4]),Double.parseDouble(F1[5]));\r\n\r\n        FOODS.DeleteFood(F);\r\n        SearchResultFood.setText(\"\");\r\n        SearchBoxF.clear();\r\n    }\r\n\r\n    public void SetDataFood(ActionEvent actionEvent) throws FileNotFoundException {\r\n        Foods M[]=FOODS.GetArray();\r\n        int cM=FOODS.GetLengthArray();\r\n        AllDataFood.setEditable(false);\r\n        for (int x=0;x<cM;x++) {\r\n            AllDataFood.appendText(M[x].toString()+\"\\n\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @FXML\r\n    private TextField FoodNameU;\r\n    @FXML\r\n    private TextField TypeFoodU;\r\n    @FXML\r\n    private TextField EntityFoodU;\r\n    @FXML\r\n    private TextField FoodPriceU;\r\n    @FXML\r\n    private Label MErrorFoodU;\r\n    @FXML\r\n    private TextField FoodBuyPriceU;\r\n\r\n    public void SetUpdateFood(ActionEvent actionEvent) throws IOException {\r\n        String Name=FoodNameU.getText();\r\n        if (Name.length()==0) {\r\n            MErrorFoodU.setText(\"لطفا نام غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String Type=TypeFoodU.getText();\r\n        if (Type.length()==0) {\r\n            MErrorFoodU.setText(\"لطفا نوع غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String Entity=EntityFoodU.getText();\r\n        if (Entity.length()==0) {\r\n            MErrorFoodU.setText(\"لطفا تعداد غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String Price=FoodPriceU.getText();\r\n        if (Price.length()==0) {\r\n            MErrorFoodU.setText(\"لطفا قیمت غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String BuyPrice=FoodBuyPriceU.getText();\r\n        if (BuyPrice.length()==0) {\r\n            MErrorFoodU.setText(\"لطفا قیمت خرید غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        Foods F=new Foods();\r\n        boolean Check=F.SetFoodName(Name);\r\n        if (!Check) {\r\n            MErrorFoodU.setText(\"نامعتبر!\");\r\n            FoodNameU.clear();\r\n            return;\r\n        }\r\n        Check=F.SetFoodType(Type);\r\n        if (!Check) {\r\n            MErrorFoodU.setText(\"نامعتبر!\");\r\n            TypeFoodU.clear();\r\n            return;\r\n        }\r\n        double Price2;\r\n        try {\r\n            Price2=Double.parseDouble(Price);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorU.setText(\"نامعتبر!\");\r\n            FoodPriceU.clear();\r\n            return;\r\n        }\r\n        Check=F.SetFoodPrice(Price2);\r\n        if (!Check) {\r\n            MErrorFoodU.setText(\"نامعتبر!\");\r\n            FoodPriceU.clear();\r\n            return;\r\n        }\r\n        Check=F.SetFoodQuantity(Integer.parseInt(Entity));\r\n        if (!Check) {\r\n            MErrorFoodU.setText(\"نامعتبر!\");\r\n            EntityFoodU.clear();\r\n            return;\r\n        }\r\n        double Price3;\r\n        try {\r\n            Price3=Double.parseDouble(BuyPrice);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorFoodU.setText(\"نامعتبر!\");\r\n            FoodBuyPriceU.clear();\r\n            return;\r\n        }\r\n        Check=F.SetBuyPrice(Price3);\r\n        if (!Check) {\r\n            MErrorFoodU.setText(\"نامعتبر!\");\r\n            FoodBuyPriceU.clear();\r\n            return;\r\n        }\r\n\r\n\r\n        F.SetID((int) (Math.random()*99));\r\n\r\n        String Search1=FOODS.SearchFood(SearchFoodID);\r\n\r\n        String[] T1=Search1.split(Commons.Commons);\r\n        Foods F1=new Foods(Integer.parseInt(T1[0]),T1[1],T1[2],\r\n                Double.parseDouble(T1[3]),Integer.parseInt(T1[4]),Double.parseDouble(T1[5]) );\r\n\r\n\r\n        FOODS.UpdateFood(F1,F);\r\n        MErrorFoodU.setText(\"ثبت شد!\");\r\n        EntityFoodU.clear();\r\n        FoodPriceU.clear();\r\n        FoodNameU.clear();\r\n        TypeFoodU.clear();\r\n        FoodBuyPriceU.clear();\r\n    }\r\n\r\n\r\n\r\n    //------------------------------------------------------------------------------------------------------------------------>>>Drinks\r\n\r\n    Stage DrinkStage=new Stage();\r\n\r\n    DrinksManager drinksManager=new DrinksManager(\"DrinksList\");\r\n\r\n    public void DrinksCo(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(HelloApplication.class.getResource(\"Drinks.fxml\"));\r\n        Scene scene=new Scene(loader.load(),800,600);\r\n        DrinkStage.setScene(scene);\r\n        DrinkStage.show();\r\n    }\r\n\r\n    private static int DrinkSearchID;\r\n\r\n    @FXML\r\n    private TextField DrinkName;\r\n    @FXML\r\n    private TextField DrinkType;\r\n    @FXML\r\n    private TextField DrinkPrice;\r\n    @FXML\r\n    private TextField DrinkEntity;\r\n    @FXML\r\n    private Label MErrorDrink;\r\n    @FXML\r\n    private TextField SearchBoxD;\r\n    @FXML\r\n    private Label SearchResultDrink;\r\n    @FXML\r\n    private TextArea AllDataDrink;\r\n    @FXML\r\n    private TextField DrinkBuyPrice;\r\n\r\n    public void SetDrink(ActionEvent actionEvent) throws IOException {\r\n        String Name=DrinkName.getText();\r\n        if (Name.length()==0) {\r\n            MErrorDrink.setText(\"لطفا نام نوشیدنی را وارد کنید\");\r\n            return;\r\n        }\r\n        String Type=DrinkType.getText();\r\n        if (Type.length()==0) {\r\n            MErrorDrink.setText(\"لطفا نوع نوشیدنی را وارد کنید\");\r\n            return;\r\n        }\r\n        String Entity=DrinkEntity.getText();\r\n        if (Entity.length()==0) {\r\n            MErrorDrink.setText(\"لطفا تعداد نوشیدنی را وارد کنید\");\r\n            return;\r\n        }\r\n        String Price=DrinkPrice.getText();\r\n        if (Price.length()==0) {\r\n            MErrorDrink.setText(\"لطفا قیمت نوشیدنی را وارد کنید\");\r\n            return;\r\n        }\r\n        String BuyPrice=DrinkBuyPrice.getText();\r\n        if (BuyPrice.length()==0) {\r\n            MErrorDrink.setText(\"لطفا قیمت خرید نوشیدنی را وارد کنید\");\r\n            return;\r\n        }\r\n\r\n        Drinks F=new Drinks();\r\n        boolean Check=F.SetDrinkName(Name);\r\n        if (!Check) {\r\n            MErrorDrink.setText(\"نامعتبر!\");\r\n            DrinkName.clear();\r\n            return;\r\n        }\r\n        Check=F.SetDrinkType(Type);\r\n        if (!Check) {\r\n            MErrorDrink.setText(\"نامعتبر!\");\r\n            DrinkType.clear();\r\n            return;\r\n        }\r\n        double Price2;\r\n        try {\r\n            Price2=Double.parseDouble(Price);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDrink.setText(\"نامعتبر!\");\r\n            DrinkPrice.clear();\r\n            return;\r\n        }\r\n        Check=F.SetDrinkPrice(Price2);\r\n        if (!Check) {\r\n            MErrorDrink.setText(\"نامعتبر!\");\r\n            DrinkPrice.clear();\r\n            return;\r\n        }\r\n\r\n\r\n        double Price5;\r\n        try {\r\n            Price5=Double.parseDouble(BuyPrice);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDrink.setText(\"نامعتبر!\");\r\n            DrinkBuyPrice.clear();\r\n            return;\r\n        }\r\n        Check=F.SetBuyPrice(Price5);\r\n        if (!Check) {\r\n            MErrorDrink.setText(\"نامعتبر!\");\r\n            DrinkBuyPrice.clear();\r\n            return;\r\n        }\r\n\r\n\r\n        Check=F.SetDrinkQuantity(Integer.parseInt(Entity));\r\n        if (!Check) {\r\n            MErrorDrink.setText(\"نامعتبر!\");\r\n            DrinkEntity.clear();\r\n            return;\r\n        }\r\n        F.SetID((int) (Math.random()*99));\r\n        drinksManager.AddDrink(F);\r\n        MErrorDrink.setText(\"ثبت شد!\");\r\n        DrinkName.clear();\r\n        DrinkType.clear();\r\n        DrinkEntity.clear();\r\n        DrinkPrice.clear();\r\n        DrinkBuyPrice.clear();\r\n    }\r\n\r\n    public void SearchDrink(ActionEvent actionEvent) throws IOException {\r\n        if (!(SearchBoxD.getText().length()>0 && SearchBoxD.getText().length()<3)){\r\n            SearchResultDrink.setText(\"نامعتبر!\");\r\n            SearchBoxD.clear();\r\n            return;\r\n        }\r\n        Drinks F=new Drinks();\r\n        boolean Check=F.SetID(Integer.parseInt(SearchBoxD.getText()));\r\n        if (!Check) {\r\n            SearchResultDrink.setText(\"نامعتبر!\");\r\n            SearchBoxD.clear();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            DrinkSearchID=Integer.parseInt(SearchBoxD.getText());\r\n        }\r\n        catch (Exception e) {\r\n            SearchResultDrink.setText(\"نامعتبر!\");\r\n            SearchBoxD.clear();\r\n            return;\r\n        }\r\n\r\n        String TE= drinksManager.SearchDrink(DrinkSearchID);\r\n        SearchResultDrink.setText(TE);\r\n        SearchBoxD.clear();\r\n    }\r\n\r\n    public void UpdateStageDrink(ActionEvent actionEvent) throws IOException {\r\n        if(SearchResultDrink.getText().length()==0){\r\n            return;\r\n        }\r\n        if (SearchResultDrink.getText().equals(\"نامعتبر!\")) {\r\n            return;\r\n        }\r\n        FXMLLoader loader=new FXMLLoader(HelloApplication.class.getResource(\"UpdateDrink.fxml\"));\r\n        Scene scene=new Scene(loader.load(),800,600);\r\n        DrinkStage.setScene(scene);\r\n        DrinkStage.show();\r\n    }\r\n    \r\n    \r\n\r\n\r\n    public void DeleteDrink(ActionEvent actionEvent) throws IOException {\r\n        String S1=SearchResultDrink.getText();\r\n        String[] F1=S1.split(Commons.Commons);\r\n        Drinks F=new Drinks(Integer.parseInt(F1[0]),F1[1],F1[2],\r\n                Double.parseDouble(F1[3]),Integer.parseInt(F1[4]),Double.parseDouble(F1[5]));\r\n\r\n        drinksManager.DeleteDrink(F);\r\n        SearchResultDrink.setText(\"\");\r\n        SearchBoxD.clear();\r\n    }\r\n\r\n    public void SetDataDrink(ActionEvent actionEvent) throws FileNotFoundException {\r\n        AllDataDrink.setText(\"\");\r\n        Drinks D[]=drinksManager.GetArray();\r\n        int cD=drinksManager.GetLengthArray();\r\n        AllDataDrink.setEditable(false);\r\n        for (int x=0;x<cD;x++) {\r\n            AllDataDrink.appendText(D[x].toString()+\"\\n\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @FXML\r\n    private TextField DrinkNameU;\r\n    @FXML\r\n    private TextField DrinkTypeU;\r\n    @FXML\r\n    private TextField DrinkPriceU;\r\n    @FXML\r\n    private TextField DrinkEntityU;\r\n    @FXML\r\n    private Label MErrorDrinkU;\r\n    @FXML\r\n    private TextField DrinkBuyPriceU;\r\n\r\n\r\n\r\n    public void SetUpdateDrink(ActionEvent actionEvent) throws IOException {\r\n        String Name=DrinkNameU.getText();\r\n        if (Name.length()==0) {\r\n            MErrorDrinkU.setText(\"لطفا نام غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String Type=DrinkTypeU.getText();\r\n        if (Type.length()==0) {\r\n            MErrorFoodU.setText(\"لطفا نوع غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String Entity=DrinkEntityU.getText();\r\n        if (Entity.length()==0) {\r\n            MErrorDrinkU.setText(\"لطفا تعداد غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String Price=DrinkPriceU.getText();\r\n        if (Price.length()==0) {\r\n            MErrorDrinkU.setText(\"لطفا قیمت غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        String BuyPrice=DrinkBuyPriceU.getText();\r\n        if (BuyPrice.length()==0) {\r\n            MErrorDrinkU.setText(\"لطفا قیمت خرید غذا را وارد کنید\");\r\n            return;\r\n        }\r\n        Drinks F=new Drinks();\r\n        boolean Check=F.SetDrinkName(Name);\r\n        if (!Check) {\r\n            MErrorDrinkU.setText(\"نامعتبر!\");\r\n            DrinkNameU.clear();\r\n            return;\r\n        }\r\n        Check=F.SetDrinkType(Type);\r\n        if (!Check) {\r\n            MErrorDrinkU.setText(\"نامعتبر!\");\r\n            DrinkTypeU.clear();\r\n            return;\r\n        }\r\n        double Price2;\r\n        try {\r\n            Price2=Double.parseDouble(Price);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDrinkU.setText(\"نامعتبر!\");\r\n            DrinkPriceU.clear();\r\n            return;\r\n        }\r\n        Check=F.SetDrinkPrice(Price2);\r\n        if (!Check) {\r\n            MErrorDrinkU.setText(\"نامعتبر!\");\r\n            DrinkPriceU.clear();\r\n            return;\r\n        }\r\n        double Price10=0;\r\n        try {\r\n            Price10=Double.parseDouble(BuyPrice);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDrinkU.setText(\"نامعتبر!\");\r\n            DrinkBuyPriceU.clear();\r\n            return;\r\n        }\r\n        Check=F.SetBuyPrice(Price10);\r\n        if (!Check) {\r\n            MErrorDrinkU.setText(\"نامعتبر!\");\r\n            DrinkEntityU.clear();\r\n            return;\r\n        }\r\n\r\n        int Count=0;\r\n        try {\r\n            Count=Integer.parseInt(Entity);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDrinkU.setText(\"نامعتبر!\");\r\n            DrinkEntityU.clear();\r\n            return;\r\n        }\r\n\r\n        Check=F.SetDrinkQuantity(Count);\r\n        if (!Check) {\r\n            MErrorDrinkU.setText(\"نامعتبر!\");\r\n            DrinkEntityU.clear();\r\n            return;\r\n        }\r\n        F.SetID((int) (Math.random()*99));\r\n        String Search= drinksManager.SearchDrink(DrinkSearchID);\r\n        String[] T1=Search.split(Commons.Commons);\r\n        Drinks F1=new Drinks(Integer.parseInt(T1[0]),T1[1],T1[2],\r\n                Double.parseDouble(T1[3]),Integer.parseInt(T1[4]),Double.parseDouble(T1[5]));\r\n\r\n\r\n        drinksManager.UpdateDrink(F1,F);\r\n        MErrorDrinkU.setText(\"ثبت شد!\");\r\n        DrinkEntityU.clear();\r\n        DrinkPriceU.clear();\r\n        DrinkNameU.clear();\r\n        DrinkTypeU.clear();\r\n        DrinkBuyPriceU.clear();\r\n    }\r\n\r\n\r\n\r\n\r\n    //------------------------------------------------------------------------------------------------------>>>Deserts\r\n    private Stage DessertStage=new Stage();\r\n    private DessertManager dessertManager=new DessertManager(\"Desserts\");\r\n\r\n    public void DessertsCo(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader loader=new FXMLLoader(HelloApplication.class.getResource(\"Desserts.fxml\"));\r\n        Scene scene=new Scene(loader.load(),800,600);\r\n        DessertStage.setScene(scene);\r\n        DessertStage.show();\r\n    }\r\n    @FXML\r\n    private TextField DessertName;\r\n    @FXML\r\n    private TextField DessertEntity;\r\n    @FXML\r\n    private TextField DessertPrice;\r\n    @FXML\r\n    private TextField DessertBuyPrice;\r\n    @FXML\r\n    private Label MErrorDessert;\r\n\r\n    public void SetDessert(ActionEvent actionEvent) throws IOException {\r\n        String Name=DessertName.getText();\r\n        if(Name.length()==0) {\r\n            MErrorDessert.setText(\"نام دسر را وارد کنید\");\r\n            return;\r\n        }\r\n        String Entity=DessertEntity.getText();\r\n        if (Entity.length()==0) {\r\n            MErrorDessert.setText(\"تعداد دسر را وارد کنید\");\r\n            return;\r\n        }\r\n        String Price=DessertPrice.getText();\r\n        if (Price.length()==0) {\r\n            MErrorDessert.setText(\"قیمت دسر را وارد کنید\");\r\n            return;\r\n        }\r\n        String BuyPrice=DessertBuyPrice.getText();\r\n        if (BuyPrice.length()==0) {\r\n            MErrorDessert.setText(\"قیمت خرید دسر را وارد کنید\");\r\n            return;\r\n        }\r\n\r\n        Dessert D=new Dessert();\r\n        boolean Check=D.SetName(Name);\r\n        if (!Check) {\r\n            MErrorDessert.setText(\"نامعتبر\");\r\n            DessertName.clear();\r\n            return;\r\n        }\r\n\r\n        int Count=0;\r\n        try {\r\n            Count=Integer.parseInt(Entity);\r\n        }\r\n\r\n        catch (Exception e) {\r\n            MErrorDessert.setText(\"نامعتبر\");\r\n            DessertEntity.clear();\r\n            return;\r\n        }\r\n\r\n        Check=D.SetDessertQuantity(Count);\r\n        if (!Check) {\r\n            MErrorDessert.setText(\"نامعتبر\");\r\n            DessertName.clear();\r\n            return;\r\n        }\r\n\r\n        double P1=0;\r\n        try {\r\n            P1=Double.parseDouble(Price);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDessert.setText(\"نامعتبر\");\r\n            DessertPrice.clear();\r\n            return;\r\n        }\r\n\r\n        Check=D.SetPrice(P1);\r\n        if (!Check) {\r\n            MErrorDessert.setText(\"نامعتبر\");\r\n            DessertPrice.clear();\r\n            return;\r\n        }\r\n\r\n\r\n        double P2=0;\r\n        try {\r\n            P2=Double.parseDouble(BuyPrice);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDessert.setText(\"نامعتبر\");\r\n            DessertBuyPrice.clear();\r\n            return;\r\n        }\r\n        Check=D.SetBuyPrice(P2);\r\n        if (!Check) {\r\n            MErrorDessert.setText(\"نامعتبر\");\r\n            DessertBuyPrice.clear();\r\n            return;\r\n        }\r\n        Check=D.SetId((int) (Math.random()*9999));\r\n        if (!Check) {\r\n            MErrorDessert.setText(\"نامعتبر\");\r\n            DessertBuyPrice.clear();\r\n            return;\r\n        }\r\n        dessertManager.UpdateDessert(SearchIDDessert,D);\r\n        MErrorDessert.setText(\"ثبت شد!\");\r\n        DessertName.clear();\r\n        DessertEntity.clear();\r\n        DessertPrice.clear();\r\n        DessertBuyPrice.clear();\r\n    }\r\n\r\n    @FXML\r\n    private TextField SearchBoxDessert;\r\n    @FXML\r\n    private Label SearchResultDessert;\r\n\r\n    private static int SearchIDDessert;\r\n\r\n    public void SearchDessert(ActionEvent actionEvent) throws FileNotFoundException {\r\n        try {\r\n            SearchIDDessert=Integer.parseInt(SearchBoxDessert.getText());\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDessert.setText(\"نامعتبر\");\r\n            SearchBoxDessert.clear();\r\n            return;\r\n        }\r\n\r\n        String Result=dessertManager.Search(SearchIDDessert);\r\n        SearchResultDessert.setText(Result);\r\n        SearchBoxDessert.clear();\r\n    }\r\n\r\n\r\n    public void DeleteDessert(ActionEvent actionEvent) throws IOException {\r\n        dessertManager.DeleteDessert(SearchIDDessert);\r\n        SearchResultDessert.setText(\"\");\r\n        SearchBoxDessert.clear();\r\n    }\r\n\r\n    public void UpdateStageDessert(ActionEvent actionEvent) throws IOException {\r\n        FXMLLoader loader = new FXMLLoader(HelloApplication.class.getResource(\"UpdateDessert.fxml\"));\r\n        Scene scene = new Scene(loader.load(),800,600);\r\n        DessertStage.setScene(scene);\r\n        DessertStage.show();\r\n    }\r\n\r\n    @FXML\r\n    private TextArea AllDataDessert;\r\n\r\n    public void SetDataDessert(ActionEvent actionEvent) throws FileNotFoundException {\r\n        AllDataDessert.setEditable(false);\r\n        Dessert D[]=dessertManager.GetArray();\r\n        int cD=dessertManager.GetRowCount();\r\n        AllDataDessert.setText(null);\r\n        for (int i=0;i<cD;i++) {\r\n            AllDataDessert.appendText(D[i].toString()+\"\\n\");\r\n        }\r\n\r\n    }\r\n\r\n    @FXML\r\n    private TextField DessertEntityU;\r\n    @FXML\r\n    private TextField DessertNameU;\r\n    @FXML\r\n    private Label MErrorDessertU;\r\n    @FXML\r\n    private TextField DessertBuyPriceU;\r\n    @FXML\r\n    private TextField DessertPriceU;\r\n\r\n\r\n    public void SetUpdateDessert(ActionEvent actionEvent) throws IOException {\r\n        String NameDessert = DessertNameU.getText();\r\n        if (NameDessert.length() == 0) {\r\n            MErrorDessertU.setText(\"اسم را وارد کنید\");\r\n            return;\r\n        }\r\n        String EntityDessert = DessertEntityU.getText();\r\n        if (EntityDessert.length() == 0) {\r\n            MErrorDessertU.setText(\"تعداد را وارد کنید\");\r\n            return;\r\n        }\r\n        String PriceDessert = DessertPriceU.getText();\r\n        if (PriceDessert.length() == 0) {\r\n            MErrorDessertU.setText(\"قیمت فروش را وارد کنید\");\r\n            return;\r\n        }\r\n        String BuyPriceDessert = DessertBuyPriceU.getText();\r\n        if (BuyPriceDessert.length() == 0) {\r\n            MErrorDessertU.setText(\"قیمت خرید را وارد کنید\");\r\n            return;\r\n        }\r\n        Dessert D=new Dessert();\r\n        boolean Check=D.SetName(NameDessert);\r\n        if (!Check) {\r\n            MErrorDessertU.setText(\"نامعتبر!\");\r\n            DessertNameU.clear();\r\n            return;\r\n        }\r\n        double P1=0;\r\n        try {\r\n            P1=Double.parseDouble(PriceDessert);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDessertU.setText(\"نامعتبر!\");\r\n            DessertPriceU.clear();\r\n            return;\r\n        }\r\n        Check=D.SetPrice(P1);\r\n        if (!Check) {\r\n            MErrorDessertU.setText(\"نامعتبر!\");\r\n            DessertPriceU.clear();\r\n            return;\r\n        }\r\n\r\n        double P2=0;\r\n        try {\r\n            P2=Double.parseDouble(BuyPriceDessert);\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDessertU.setText(\"نامعتبر!\");\r\n            DessertBuyPriceU.clear();\r\n            return;\r\n        }\r\n        Check=D.SetBuyPrice(P2);\r\n        if (!Check) {\r\n            MErrorDessertU.setText(\"نامعتبر!\");\r\n            DessertBuyPriceU.clear();\r\n            return;\r\n        }\r\n\r\n        int Count=0;\r\n        try {\r\n            Count=Integer.parseInt(DessertEntityU.getText());\r\n        }\r\n        catch (Exception e) {\r\n            MErrorDessertU.setText(\"نامعتبر!\");\r\n            DessertEntityU.clear();\r\n            return;\r\n        }\r\n        Check=D.SetDessertQuantity(Count);\r\n        if (!Check) {\r\n            MErrorDessertU.setText(\"نامعتبر!\");\r\n            DessertEntityU.clear();\r\n            return;\r\n        }\r\n        Check=D.SetId((int) (Math.random()*9999));\r\n\r\n\r\n        dessertManager.UpdateDessert(SearchIDDessert,D);\r\n        MErrorDessertU.setText(\"ثبت شد!\");\r\n        DessertNameU.clear();\r\n        DessertEntityU.clear();\r\n        DessertPriceU.clear();\r\n        DessertBuyPriceU.clear();\r\n    }\r\n\r\n\r\n    //----------------------------------------------------------------------------------------------------------->>>Rent\r\n\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/I_S/src/main/java/com/example/i_s/HelloController.java b/I_S/src/main/java/com/example/i_s/HelloController.java
--- a/I_S/src/main/java/com/example/i_s/HelloController.java	(revision 914722538c3b50e57001505be3e534498ffb737e)
+++ b/I_S/src/main/java/com/example/i_s/HelloController.java	(date 1746019125030)
@@ -11,6 +11,8 @@
 import java.io.IOException;
 public class HelloController {
 
+
+
     public HelloController() throws IOException {}
 
 
@@ -1511,10 +1513,86 @@
     }
 
 
-    //----------------------------------------------------------------------------------------------------------->>>Rent
+
+    //----------------------------------------------------------------------------------------------------------->>>Receipt
+    Stage ReceiptStage=new Stage();
+
+
+    @FXML
+    private TextField FoodCode;
+    @FXML
+    private TextField DessertCode;
+    @FXML
+    private TextField DrinkCode;
+    @FXML
+    private TextField FoodCount;
+    @FXML
+    private TextField DessertCount;
+    @FXML
+    private TextField DrinkCount;
+    @FXML
+    private TextField MemberCode;
+    @FXML
+    private TextField MemberCount;
+    @FXML
+    private Label ReceiptError;
+    @FXML
+    private Button SetReceipt;
+
+
+
+
+    @FXML
+    private void ReceiptsCo(ActionEvent actionEvent) throws IOException {
+        FXMLLoader loader = new FXMLLoader(HelloApplication.class.getResource("Receipts.fxml"));
+        Scene scene = new Scene(loader.load(),800,600);
+        ReceiptStage.setScene(scene);
+        ReceiptStage.show();
+    }
+
+    @FXML
+    private void SetReceipt(ActionEvent actionEvent) {
+
+    }
+
 
+    @FXML
+    private TextArea AllChoice;
+    @FXML
+    private Button SetAllChoice;
+    @FXML
+    public void SetAllChoice(ActionEvent actionEvent) throws FileNotFoundException {
+        AllChoice.setEditable(false);
+        AllChoice.setText(null);
+        AllChoice.appendText("Members:"+"\n");
+        Members M[]=memberManager.GetArray();
+        int cM=memberManager.GetLengthArray();
+        for (int i=0;i<cM;i++) {
+            AllChoice.appendText(M[i].toString()+"\n");
+        }
 
+        AllChoice.appendText("Foods:"+"\n");
+        Foods F[]=FOODS.GetArray();
+        int cF=FOODS.GetLengthArray();
+        for (int i=0;i<cF;i++) {
+            AllChoice.appendText(F[i].toString()+"\n");
+        }
 
+        AllChoice.appendText("Drinks:"+"\n");
+        Drinks D1[]=drinksManager.GetArray();
+        int cD1=drinksManager.GetLengthArray();
+        for (int i=0;i<cD1;i++) {
+            AllChoice.appendText(D1[i].toString()+"\n");
+        }
 
+        AllChoice.appendText("Desserts:"+"\n");
+        Dessert D2[]=dessertManager.GetArray();
+        int cD2=dessertManager.GetRowCount();
+        for (int i=0;i<cD2;i++) {
+            AllChoice.appendText(D2[i].toString()+"\n");
+        }
 
+
+
+    }
 }
\ No newline at end of file
Index: I_S/src/main/resources/com/example/i_s/Start.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n\r\n<AnchorPane prefHeight=\"400.0\" prefWidth=\"600.0\" xmlns=\"http://javafx.com/javafx/23.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.example.i_s.HelloController\">\r\n   <children>\r\n      <Button layoutX=\"182.0\" layoutY=\"125.0\" mnemonicParsing=\"false\" onAction=\"#MembersCo\" prefHeight=\"60.0\" prefWidth=\"96.0\" text=\"Members\" />\r\n      <Button layoutX=\"323.0\" layoutY=\"125.0\" mnemonicParsing=\"false\" onAction=\"#RoomsCo\" prefHeight=\"60.0\" prefWidth=\"96.0\" text=\"Rooms\" />\r\n      <Button layoutX=\"323.0\" layoutY=\"216.0\" mnemonicParsing=\"false\" onAction=\"#FoodsCo\" prefHeight=\"60.0\" prefWidth=\"96.0\" text=\"Foods\" />\r\n      <Button layoutX=\"182.0\" layoutY=\"216.0\" mnemonicParsing=\"false\" onAction=\"#DrinksCo\" prefHeight=\"60.0\" prefWidth=\"96.0\" text=\"Drinks\" />\r\n      <Button layoutX=\"252.0\" layoutY=\"38.0\" mnemonicParsing=\"false\" onAction=\"#DessertsCo\" prefHeight=\"60.0\" prefWidth=\"96.0\" text=\"Deserts\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/I_S/src/main/resources/com/example/i_s/Start.fxml b/I_S/src/main/resources/com/example/i_s/Start.fxml
--- a/I_S/src/main/resources/com/example/i_s/Start.fxml	(revision 914722538c3b50e57001505be3e534498ffb737e)
+++ b/I_S/src/main/resources/com/example/i_s/Start.fxml	(date 1746010348251)
@@ -10,5 +10,6 @@
       <Button layoutX="323.0" layoutY="216.0" mnemonicParsing="false" onAction="#FoodsCo" prefHeight="60.0" prefWidth="96.0" text="Foods" />
       <Button layoutX="182.0" layoutY="216.0" mnemonicParsing="false" onAction="#DrinksCo" prefHeight="60.0" prefWidth="96.0" text="Drinks" />
       <Button layoutX="252.0" layoutY="38.0" mnemonicParsing="false" onAction="#DessertsCo" prefHeight="60.0" prefWidth="96.0" text="Deserts" />
+      <Button layoutX="252.0" layoutY="304.0" mnemonicParsing="false" onAction="#ReceiptsCo" prefHeight="60.0" prefWidth="96.0" text="Receipt" />
    </children>
 </AnchorPane>
